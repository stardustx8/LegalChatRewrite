# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy dotnet core app to Azure Function App - fct-euw-legalcb-legalapi-prod

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'LegalApi'
  DOTNET_VERSION: '8.0.x' # set this to the dotnet version to use

jobs:
  build-and-deploy:
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install
      
      - name: Build Angular (script or CLI)
        working-directory: frontend
        shell: pwsh
        run: |
          # Try package.json script first; if missing, fall back to CLI
          try { npm run build } catch { npx @angular/cli@18 build --configuration production }
      
      - name: Copy Angular dist into Functions wwwroot/app
        shell: pwsh
        run: |
          if (Test-Path "LegalApi/wwwroot/app") { Remove-Item -Recurse -Force "LegalApi/wwwroot/app" }
          New-Item -ItemType Directory -Force -Path "LegalApi/wwwroot/app" | Out-Null

          # Find the built app by locating index.html under frontend/dist
          $index = Get-ChildItem -Path "frontend/dist" -Recurse -Filter "index.html" | Select-Object -First 1
          if (-not $index) {
            Write-Error "Angular build output not found (no index.html under frontend/dist)"
            exit 1
          }
          $src = $index.Directory.FullName
          Write-Host "Copying from $src"
          Copy-Item -Recurse -Force -Path (Join-Path $src '*') -Destination "LegalApi/wwwroot/app"

      - name: Patch base href to /app/
        shell: pwsh
        run: |
          $ix = "LegalApi/wwwroot/app/index.html"
          if (-not (Test-Path $ix)) { Write-Error "index.html not found at $ix"; exit 1 }
          $html = Get-Content -LiteralPath $ix -Raw
          # Replace common base href variants with /app/
          $html = $html -replace '<base\s+href="/"\s*/?>','<base href="/app/" />'
          $html = $html -replace '<base\s+href="./"\s*/?>','<base href="/app/" />'
          Set-Content -LiteralPath $ix -Value $html -Encoding UTF8

      - name: Ensure web.config for /app (SPA default + fallback)
        shell: pwsh
        run: |
          $webConfig = @'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <defaultDocument>
                <files>
                  <add value="index.html" />
                </files>
              </defaultDocument>
              <rewrite>
                <rules>
                  <rule name="SPA Fallback to /app/index.html" stopProcessing="true">
                    <match url=".*" />
                    <conditions logicalGrouping="MatchAll">
                      <add input="{REQUEST_URI}" pattern="^/api/.*" negate="true" />
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                      <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                    </conditions>
                    <action type="Rewrite" url="/app/index.html" />
                  </rule>
                </rules>
              </rewrite>
              <staticContent>
                <mimeMap fileExtension=".json" mimeType="application/json" />
              </staticContent>
            </system.webServer>
          </configuration>
          '@
          Set-Content -LiteralPath "LegalApi/wwwroot/app/web.config" -Value $webConfig -Encoding UTF8

      - name: Ensure root web.config (redirect root and SPA fallback to /app/index.html)
        shell: pwsh
        run: |
          $rootWeb = @'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <rewrite>
                <rules>
                  <!-- Serve SPA when hitting site root -->
                  <rule name="RootToAppIndex" stopProcessing="true">
                    <match url="^$" />
                    <action type="Rewrite" url="/app/index.html" />
                  </rule>
                  <!-- Fallback all non-API, non-existing paths to SPA -->
                  <rule name="GlobalSPAFallback" stopProcessing="true">
                    <match url=".*" />
                    <conditions logicalGrouping="MatchAll">
                      <add input="{REQUEST_URI}" pattern="^/api/.*" negate="true" />
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                      <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                    </conditions>
                    <action type="Rewrite" url="/app/index.html" />
                  </rule>
                </rules>
              </rewrite>
            </system.webServer>
          </configuration>
          '@
          Set-Content -LiteralPath "LegalApi/wwwroot/web.config" -Value $rootWeb -Encoding UTF8

      - name: List app folder (verify index.html present)
        shell: pwsh
        run: |
          Get-ChildItem -Recurse -Force 'LegalApi/wwwroot/app' | Select-Object FullName

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Publish Function App'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet publish --configuration Release --output ./publish_output
          popd

      - name: List publish_output
        shell: pwsh
        run: Get-ChildItem -Recurse -Force '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/publish_output' | Select-Object FullName
        
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'fct-euw-legalcb-legalapi-prod'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/publish_output'

          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_CD6F38929794479DA563E4FD20A648B0 }}










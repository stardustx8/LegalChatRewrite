# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy dotnet core app to Azure Function App - fct-euw-legalcb-legalapi-prod

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'LegalApi'
  DOTNET_VERSION: '8.0.x' # set this to the dotnet version to use

jobs:
  build-and-deploy:
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install
      
      - name: Build Angular (script or CLI)
        working-directory: frontend
        shell: pwsh
        run: |
          # Try package.json script first; if missing, fall back to CLI
          try { npm run build } catch { npx @angular/cli@18 build --configuration production }
      
      - name: Copy Angular dist into Functions wwwroot/app
        shell: pwsh
        run: |
          if (Test-Path "LegalApi/wwwroot/app") { Remove-Item -Recurse -Force "LegalApi/wwwroot/app" }
          New-Item -ItemType Directory -Force -Path "LegalApi/wwwroot/app" | Out-Null
          # Try common Angular 17/18 output locations
          $distRoot = Resolve-Path "frontend/dist"
          $candidate = Get-ChildItem -Path $distRoot -Recurse -Directory | Where-Object {
            $_.Name -in @('browser','ssr') -or Test-Path (Join-Path $_.FullName 'index.html')
          } | Select-Object -First 1
          if (-not $candidate) { $candidate = (Get-ChildItem -Path $distRoot -Directory | Select-Object -First 1) }
          Copy-Item -Recurse -Force -Path "$($candidate.FullName)/*" -Destination "LegalApi/wwwroot/app"
      
      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Publish Function App'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet publish --configuration Release --output ./publish_output
          popd

      - name: List publish_output
        shell: pwsh
        run: Get-ChildItem -Recurse -Force '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/publish_output' | Select-Object FullName
        
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'fct-euw-legalcb-legalapi-prod'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/publish_output'

          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_CD6F38929794479DA563E4FD20A648B0 }}








